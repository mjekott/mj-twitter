{"version":3,"sources":["fbase.js","components/CreateTweet.js","components/Tweet.js","components/ListTweet.js","routes/Home.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","CreateTweet","userObj","useState","tweet","setTweet","attachement","setAttachment","onSubmit","event","a","preventDefault","fileref","ref","child","uid","uuidV4","putString","response","getDownloadURL","attchementUrl","alert","newTweet","text","createdAt","Date","now","creatorId","collection","add","type","name","placeholder","maxLength","onChange","value","target","required","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","src","width","height","alt","onClick","Tweet","tweetObj","isOwner","editing","setEditing","setNewTeet","OnDeleteTweet","window","confirm","doc","id","delete","refFromURL","update","toggleEditing","prev","ListTweet","tweets","setTweets","useEffect","onSnapshot","snapshot","newArray","docs","map","data","Home","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Navigation","to","displayName","Profile","refreshuser","setName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setisLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f6071c0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from 'react';\r\nimport { storageService, dbService } from 'fbase';\r\nimport { v4 as uuidV4 } from 'uuid';\r\n\r\nconst CreateTweet = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState('');\r\n  const [attachement, setAttachment] = useState(null);\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const file = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        target: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n    event.target.value = null;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attchementUrl;\r\n    if (attachement) {\r\n      const fileref = storageService.ref().child(`${userObj.uid}/${uuidV4()}`);\r\n      const response = await fileref.putString(attachement, 'data_url');\r\n      attchementUrl = await response.ref.getDownloadURL();\r\n    }\r\n    if (!tweet) {\r\n      alert('tweet can not be empty');\r\n      return;\r\n    }\r\n    const newTweet = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      ...(attchementUrl && { attchementUrl }),\r\n    };\r\n    await dbService.collection('tweets').add(newTweet);\r\n    setTweet('');\r\n    setAttachment(null);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    setTweet(value);\r\n  };\r\n\r\n  const onClearAttachement = () => setAttachment(null);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"tweet\"\r\n          placeholder=\"What's on your mind\"\r\n          maxLength={120}\r\n          onChange={onChange}\r\n          value={tweet}\r\n          required\r\n        />\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        {attachement && (\r\n          <div>\r\n            <img src={attachement} width=\"50\" height=\"50\" alt=\"tweet-img\" />\r\n            <button onClick={onClearAttachement}>Clear</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTweet;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTeet] = useState(tweetObj.text);\r\n  const { attchementUrl } = tweetObj;\r\n  const OnDeleteTweet = async () => {\r\n    const ok = window.confirm('Do you want to delete tweet');\r\n    if (!ok) {\r\n      return;\r\n    }\r\n    await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n    if (attchementUrl) {\r\n      await storageService.refFromURL(attchementUrl).delete();\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (newTweet === tweetObj.text) {\r\n      setEditing(false);\r\n      return;\r\n    }\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n\r\n    setNewTeet(value);\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit}>\r\n                <input type=\"text\" onChange={onChange} value={newTweet} />\r\n                <input type=\"submit\" value=\"Update Tweet\" />\r\n              </form>\r\n              <button onClick={toggleEditing}>Cancel</button>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <h4>{tweetObj.text}</h4>\r\n          {attchementUrl && (\r\n            <div>\r\n              <img\r\n                src={attchementUrl}\r\n                alt=\"tweetimage\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n              />\r\n            </div>\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={toggleEditing}>Edit</button>\r\n              <button onClick={OnDeleteTweet}>Delete</button>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Tweet from 'components/Tweet';\r\n\r\nconst ListTweet = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection('tweets').onSnapshot((snapshot) => {\r\n      const newArray = snapshot.docs.map((doc) => {\r\n        return {\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        };\r\n      });\r\n\r\n      setTweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {tweets.map((tweet) => {\r\n        return (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListTweet;\r\n","import CreateTweet from 'components/CreateTweet';\r\nimport ListTweet from 'components/ListTweet';\r\n\r\nconst Home = ({ userObj }) => {\r\n  return (\r\n    <div>\r\n      <CreateTweet userObj={userObj} />\r\n      <ListTweet userObj={userObj} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password)(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span>{error && error}</span>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          onChange={onChange}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          name=\"password\"\r\n          required\r\n        />\r\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log in'} />\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? 'Sign in' : 'Create Account'}\r\n      </span>\r\n      <div>\r\n        <button name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick}>\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\">{userObj.displayName}</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Profile = ({ userObj, refreshuser }) => {\r\n  const [name, setName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n\r\n  const onLogoutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (name === userObj.displayName || name === '') {\r\n      return;\r\n    }\r\n    await userObj.updateProfile({\r\n      displayName: name,\r\n    });\r\n    refreshuser();\r\n  };\r\n\r\n  /*   const getMyTweets = async () => {\r\n    await dbService\r\n      .collection('tweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createdAt')\r\n      .get();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  }, []); */\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display Name\"\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value=\"Update DisplayName\" />\r\n      </form>\r\n      <button onClick={onLogoutClick}>logout</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport Home from '../routes/Home';\r\nimport Auth from '../routes/Auth';\r\nimport Navigation from './Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshuser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj}  refreshuser={refreshuser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setisLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setisLoggedIn(false);\n        setUserObj({});\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(Object.assign({}, user));\n  };\n  return (\n    <div>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshuser={refreshUser}\n        />\n      ) : (\n        'loading ....'\n      )}\n      <footer>&copy; {new Date().getFullYear()} Ntwitter </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}